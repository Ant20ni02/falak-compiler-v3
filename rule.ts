import type { Rule } from './types';

export const rules: Rule[] = [
    { lhs: "PROGRAM'", len: 1, result: ['PROGRAM'] },
    { lhs: 'PROGRAM', len: 1, result: ['DEF-LIST'] },
    { lhs: 'DEF-LIST', len: 2, result: ['DEF-LIST', 'DEF'] },
    { lhs: 'DEF-LIST', len: 0, result: [] },
    { lhs: 'DEF', len: 1, result: ['VAR-DEF'] },
    { lhs: 'DEF', len: 1, result: ['FUN-DEF'] },
    { lhs: 'VAR-DEF', len: 3, result: ['var', 'VAR-LIST', ';'] },
    { lhs: 'VAR-LIST', len: 1, result: ['ID-LIST'] },
    { lhs: 'ID-LIST', len: 2, result: ['ID', 'ID-LIST-CONT'] },
    { lhs: 'ID-LIST-CONT', len: 3, result: [',', 'ID', 'ID-LIST-CONT'] },
    { lhs: 'ID-LIST-CONT', len: 0, result: [] },
    {
        lhs: 'FUN-DEF',
        len: 8,
        result: [
            'ID',
            '(',
            'PARAM-LIST',
            ')',
            '{',
            'VAR-DEF-LIST',
            'STMT-LIST',
            '}',
        ],
    },
    { lhs: 'PARAM-LIST', len: 1, result: ['ID-LIST'] },
    { lhs: 'PARAM-LIST', len: 0, result: [] },
    { lhs: 'VAR-DEF-LIST', len: 2, result: ['VAR-DEF-LIST', 'VAR-DEF'] },
    { lhs: 'VAR-DEF-LIST', len: 0, result: [] },
    { lhs: 'STMT-LIST', len: 2, result: ['STMT-LIST', 'STMT'] },
    { lhs: 'STMT-LIST', len: 0, result: [] },
    { lhs: 'STMT', len: 1, result: ['STMT-ASSIGN'] },
    { lhs: 'STMT', len: 1, result: ['STMT-INCR'] },
    { lhs: 'STMT', len: 1, result: ['STMT-DECR'] },
    { lhs: 'STMT', len: 1, result: ['STMT-FUN-CALL'] },
    { lhs: 'STMT', len: 1, result: ['STMT-IF'] },
    { lhs: 'STMT', len: 1, result: ['STMT-WHILE'] },
    { lhs: 'STMT', len: 1, result: ['STMT-DO-WHILE'] },
    { lhs: 'STMT', len: 1, result: ['STMT-BREAK'] },
    { lhs: 'STMT', len: 1, result: ['STMT-RETURN'] },
    { lhs: 'STMT', len: 1, result: ['STMT-EMPTY'] },
    { lhs: 'STMT-ASSIGN', len: 4, result: ['ID', '=', 'EXPR', ';'] },
    { lhs: 'STMT-INCR', len: 3, result: ['inc', 'ID', ';'] },
    { lhs: 'STMT-DECR', len: 3, result: ['dec', 'ID', ';'] },
    { lhs: 'STMT-FUN-CALL', len: 2, result: ['FUN-CALL', ';'] },
    { lhs: 'FUN-CALL', len: 4, result: ['ID', '(', 'EXPR-LIST', ')'] },
    { lhs: 'EXPR-LIST', len: 2, result: ['EXPR', 'EXPR-LIST-CONT'] },
    { lhs: 'EXPR-LIST', len: 0, result: [] },
    { lhs: 'EXPR-LIST-CONT', len: 3, result: [',', 'EXPR', 'EXPR-LIST-CONT'] },
    { lhs: 'EXPR-LIST-CONT', len: 0, result: [] },
    {
        lhs: 'STMT-IF',
        len: 9,
        result: [
            'if',
            '(',
            'EXPR',
            ')',
            '{',
            'STMT-LIST',
            '}',
            'ELSE-IF-LIST',
            'ELSE',
        ],
    },
    {
        lhs: 'ELSE-IF-LIST',
        len: 8,
        result: [
            'ELSE-IF-LIST',
            'elseif',
            '(',
            'EXPR',
            ')',
            '{',
            'STMT-LIST',
            '}',
        ],
    },
    { lhs: 'ELSE-IF-LIST', len: 0, result: [] },
    { lhs: 'ELSE', len: 4, result: ['else', '{', 'STMT-LIST', '}'] },
    { lhs: 'ELSE', len: 0, result: [] },
    {
        lhs: 'STMT-WHILE',
        len: 7,
        result: ['while', '(', 'EXPR', ')', '{', 'STMT-LIST', '}'],
    },
    {
        lhs: 'STMT-DO-WHILE',
        len: 9,
        result: ['do', '{', 'STMT-LIST', '}', 'while', '(', 'EXPR', ')', ';'],
    },
    { lhs: 'STMT-BREAK', len: 2, result: ['break', ';'] },
    { lhs: 'STMT-RETURN', len: 3, result: ['return', 'EXPR', ';'] },
    { lhs: 'STMT-EMPTY', len: 1, result: [';'] },
    { lhs: 'EXPR', len: 1, result: ['EXPR-OR'] },
    { lhs: 'EXPR-OR', len: 3, result: ['EXPR-OR', 'OP-OR', 'EXPR-AND'] },
    { lhs: 'OP-OR', len: 1, result: ['||'] },
    { lhs: 'OP-OR', len: 1, result: ['^'] },
    { lhs: 'EXPR-OR', len: 1, result: ['EXPR-AND'] },
    { lhs: 'EXPR-AND', len: 3, result: ['EXPR-AND', '&&', 'EXPR-COMP'] },
    { lhs: 'EXPR-AND', len: 1, result: ['EXPR-COMP'] },
    { lhs: 'EXPR-COMP', len: 3, result: ['EXPR-COMP', 'OP-COMP', 'EXPR-REL'] },
    { lhs: 'EXPR-COMP', len: 1, result: ['EXPR-REL'] },
    { lhs: 'OP-COMP', len: 1, result: ['=='] },
    { lhs: 'OP-COMP', len: 1, result: ['!='] },
    { lhs: 'EXPR-REL', len: 3, result: ['EXPR-REL', 'OP-REL', 'EXPR-ADD'] },
    { lhs: 'EXPR-REL', len: 1, result: ['EXPR-ADD'] },
    { lhs: 'OP-REL', len: 1, result: ['<'] },
    { lhs: 'OP-REL', len: 1, result: ['<='] },
    { lhs: 'OP-REL', len: 1, result: ['>'] },
    { lhs: 'OP-REL', len: 1, result: ['>='] },
    { lhs: 'EXPR-ADD', len: 3, result: ['EXPR-ADD', 'OP-ADD', 'EXPR-MUL'] },
    { lhs: 'EXPR-ADD', len: 1, result: ['EXPR-MUL'] },
    { lhs: 'OP-ADD', len: 1, result: ['+'] },
    { lhs: 'OP-ADD', len: 1, result: ['-'] },
    { lhs: 'EXPR-MUL', len: 3, result: ['EXPR-MUL', 'OP-MUL', 'EXPR-UNARY'] },
    { lhs: 'EXPR-MUL', len: 1, result: ['EXPR-UNARY'] },
    { lhs: 'OP-MUL', len: 1, result: ['*'] },
    { lhs: 'OP-MUL', len: 1, result: ['/'] },
    { lhs: 'OP-MUL', len: 1, result: ['%'] },
    { lhs: 'EXPR-UNARY', len: 2, result: ['OP-UNARY', 'EXPR-UNARY'] },
    { lhs: 'EXPR-UNARY', len: 1, result: ['EXPR-PRIMARY'] },
    { lhs: 'OP-UNARY', len: 1, result: ['+'] },
    { lhs: 'OP-UNARY', len: 1, result: ['-'] },
    { lhs: 'OP-UNARY', len: 1, result: ['!'] },
    { lhs: 'EXPR-PRIMARY', len: 1, result: ['ID'] },
    { lhs: 'EXPR-PRIMARY', len: 1, result: ['FUN-CALL'] },
    { lhs: 'EXPR-PRIMARY', len: 1, result: ['ARRAY'] },
    { lhs: 'EXPR-PRIMARY', len: 1, result: ['LIT'] },
    { lhs: 'EXPR-PRIMARY', len: 3, result: ['(', 'EXPR', ')'] },
    { lhs: 'ARRAY', len: 3, result: ['[', 'EXPR-LIST', ']'] },
    { lhs: 'LIT', len: 1, result: ['LIT-BOOL'] },
    { lhs: 'LIT', len: 1, result: ['LIT-INT'] },
    { lhs: 'LIT', len: 1, result: ['LIT-CHAR'] },
    { lhs: 'LIT', len: 1, result: ['LIT-STR'] },
];
