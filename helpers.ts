export const tokensRegex = [
{ token: 'var', regex: /^#.*/},
{ token: 'CMT_ML', regex: /^<#[\s\S]*?#>/},
{ token: 'ID', regex: /^[a-zA-Z][a-zA-Z0-9_]*/ },
{ token: 'IDENT_KW', regex: /^(break|dec|do|else|elseif|false|if|inc|return|true|var|while)/ },
{ token: 'LT_INT', regex: /^[-]?[0-9]+/ },
{ token: 'LT_BOOL', regex: /^(true|false)/ },
{ token: 'LT_CHAR', regex: /^'(\\n|\\r|\\t|\\\'|\\\"|\\u[0-9a-fA-F]{6}|[^\'\n\r])*'/},
{ token: 'LT_STR', regex: /^"[^\'\"\n\r]*"/},
{ token: 'LPAREN', regex: /^\(/ },
{ token: 'RPAREN', regex: /^\)/ },
{ token: 'LBRKT', regex: /^\[/ },
{ token: 'RBRKT', regex: /^\]/ },
{ token: 'LCURL', regex: /^\{/ },
{ token: 'RCURL', regex: /^\}/ },
{ token: 'LOG_OR', regex: /^\|\|/ },
{ token: 'LOG_AND', regex: /^&&/ },
{ token: 'LOG_NOT', regex: /^!/ },
{ token: 'OP_ADD', regex: /^\+/ },
{ token: 'OP_MINUS', regex: /^-/ },
{ token: 'OP_MULT', regex: /^\*/ },
{ token: 'OP_DIV', regex: /^\// },
{ token: 'LOG_EQLST', regex: /^<=/ },
{ token: 'LOG_EQGRT', regex: /^>=/ },
{ token: 'LOG_IDENT', regex: /^==/ },
{ token: 'OP_ASGN', regex: /^=/ },
{ token: 'DES_LESS', regex: /^</ },
{ token: 'DES_GRT', regex: /^>/ },
{ token: 'OP_MOD', regex: /^%/ },
{ token: 'OP_CARET', regex: /^\^/ },
{ token: ';', regex: /^;+/ },
{ token: 'WHITESPACE', regex: /^\s+/ }, 
{ token: ',', regex: /[,]/ },
];

const tokens = [
    "var", "ID", ",", "(", ")", "{", "}", "=", "inc", "dec", "if", "elseif", "else", 
    "while", "do", "break", "return", "||", "^", "&&", "==", "!=", "<", "<=", ">",">=", 
    "+", "-", "*", "/", "%", "!", "[", "]", "LIT-BOOL", "LIT-INT", "LIT-CHAR", "LIT-STR"
];